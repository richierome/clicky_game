{"version":3,"sources":["components/cards/Cards.js","components/navabar/Navbar.js","components/wrapper/Wrapper.js","characters.js","App.js","serviceWorker.js","index.js"],"names":["Cards","props","react_default","a","createElement","className","class","alt","name","src","image","onClick","handleClick","id","Navbar","cardGuess","currentScore","highScore","Wrapper","children","width","height","scrolling","frameborder","allow","characters","clicked","App","state","map","character","Object","objectSpread","chosenCharacter","_this","find","shuffleCharacters","sort","b","Math","random","setState","handleIncrement","alert","_this2","this","_this$state","cardCharacters","index","cards_Cards","key","navabar_Navbar","wrapper_Wrapper","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb6aeb47.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nconst Cards = props => (\r\n    // <div className=\" col-sm-2 col-md-2 col-lg-2 \">\r\n    <div className=\"col-2\">\r\n        <div class=\"portrait square landscape\">\r\n        <img className=\"images\" alt={props.name} src={props.image}\r\n        onClick={() => props.handleClick(props.id)} />\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = props => (\r\n    \r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\"> \r\n    <h1 className=\"navbar-text\">Richie's Fighter </h1>\r\n    <span className=\"navbar-text card-guess\">{props.cardGuess}</span>\r\n    <span className=\"navbar-text current-score\">Current Score: {props.currentScore}</span>\r\n    <span className=\"navbar-text high-score\">High Score: {props.highScore}</span>\r\n    </nav>\r\n\r\n);\r\nexport default Navbar;","import React from 'react';\r\nimport './wrapper.css';\r\n\r\nconst Wrapper = props =>\r\n <div className=\"row\">{props.children}\r\n     <div class=\"music\">       \r\n        <iframe width=\"100%\" height=\"45px\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/226004102&color=%230b0a0a&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\r\n     </div>\r\n</div>\r\n\r\nexport default Wrapper;","var characters = [\r\n{\r\n      id: 1,\r\n    name: \"Ryu\",\r\n    image: \"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Ryu_image800w.jpg\",\r\n    clicked: false  \r\n},\r\n\r\n{\r\n    id: 2,\r\n    name:\"Ken\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Ken_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n\r\n{\r\n    id: 3,\r\n    name:\"Guile\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Guile_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 4,\r\n    name:\"Blanka\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Blanka_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 5,\r\n    name:\"Vega\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Vega_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 6,\r\n    name:\"Balrog\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Balrog_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 7,\r\n    name:\"Bison\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_MBison_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 8,\r\n    name:\"Cammy\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Cammy_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 9,\r\n    name:\"Chung Li\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_ChunLi_image800w.jpg\",\r\n    clicked: false\r\n},\r\n\r\n{\r\n    id: 10,\r\n    name:\"Zangief\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Zangief_image800w.jpg\",\r\n    clicked: false\r\n},\r\n{\r\n    id: 11,\r\n    name:\"Sagat\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Sagat_image800w.jpg\",\r\n    clicked: false\r\n},\r\n{\r\n    id: 12,\r\n    name:\"Dhalsim\",\r\n    image:\"https://cdn02.nintendo-europe.com/media/images/08_content_images/games_6/nintendo_switch_7/nswitch_ultrastreetfighter2thefinalchallengers/CI_NSwitch_UltraStreetFighter2TheFinalChallengers_CharacterIcons_Dhalsim_image800w.jpg\",\r\n    clicked: false\r\n}\r\n\r\n]\r\n\r\nexport default characters;\r\n\r\n","import React, { Component }from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Cards from './components/cards/Cards';\nimport Navbar from './components/navabar/Navbar';\nimport Wrapper from './components/wrapper/Wrapper';\nimport characters from './characters';\n\nclass App extends Component {\n\n  state = {\n    characters: characters.map(character => ({...character})),\n    cardGuess: \"\",\n    currentScore: 0,\n    highScore: 0, \n  };\n\n  handleClick = id => {\n    const chosenCharacter = this.state.characters.find(name => name.id === id);\n\n    if (chosenCharacter.clicked === false) {\n      chosenCharacter.clicked = true;\n      const shuffleCharacters = this.state.characters.sort((a, b) => 0.5- Math.random());\n      this.setState({character:shuffleCharacters})\n      this.handleIncrement();\n    }\n    else {\n\n      if (this.state.currentScore === 12) {\n        alert(\"YOU WON!!\");\n        this.setState({\n          highScore: this.state.currentScore,\n          currentScore: 0,\n          characters: characters.map(character => ({...character}))\n        });\n      }\n\n      else if (this.state.currentScore > this.state.highScore) {\n        alert(\"YOU LOSE!\")\n        this.setState({\n          highScore: this.state.currentScore,\n          currentScore: 0,\n          characters: characters.map(character => ({...character}))\n        });\n      }\n\n      else {\n        alert(\"YOU LOSE YOU WIN NOTHING\")\n        this.setState({\n          currentScore: 0,\n          characters: characters.map(character => ({...character}))\n        });\n      }\n    }\n  }\n\nhandleIncrement = () => {\n  this.setState({currentScore: this.state.currentScore + 1 });\n  \n}\n\nrender(){\n  const { handleClick } = this\n  const { highScore,currentScore,cardGuess }= this.state\n  let cardCharacters = this.state.characters.map((character,index) => {\n    return (<Cards key={index} id={character.id} name={character.name} image={character.image} handleClick={this.handleClick}/>)\n  });\n  return(\n   <div>\n     <Navbar\n     highScore={highScore}\n     currentScore={currentScore}\n     cardGuess={cardGuess}\n     />\n      <Wrapper>\n        {cardCharacters}\n        {handleClick}\n      </Wrapper>       \n   </div>\n  )\n}\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}